import requests
import os
import logging

logger = logging.getLogger(__name__)

OLLAMA_URL = os.getenv("OLLAMA_URL", "http://localhost:11434")
MODEL_NAME = os.getenv("OLLAMA_MODEL", "nomic-embed-text")

def get_embedding(text: str) -> list[float]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ Ollama."""
    try:
        if not text or not text.strip():
            raise ValueError("–ü—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞.")

        logger.debug(f"üìé –≠–º–±–µ–¥–¥–∏–Ω–≥ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ (–¥–ª–∏–Ω–∞ {len(text)}): {text[:60]}...")

        response = requests.post(
            f"{OLLAMA_URL}/api/embeddings",
            json={"model": MODEL_NAME, "prompt": text}
        )
        response.raise_for_status()
        data = response.json()
        embedding = data.get("embedding")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
        if isinstance(embedding, list) and len(embedding) == 1 and isinstance(embedding[0], list):
            embedding = embedding[0]

        if not isinstance(embedding, list) or not embedding:
            raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç embedding: None –∏–ª–∏ –ø—É—Å—Ç–æ–π")

        return [float(x) for x in embedding]

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–∞: {str(e)}")
        raise
