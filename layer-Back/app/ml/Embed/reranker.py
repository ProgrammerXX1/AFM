from sentence_transformers import CrossEncoder

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ smaller –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
reranker = CrossEncoder("BAAI/bge-reranker-base")  # –∏–ª–∏ large

def rerank_chunks(query: str, chunks: list[str], top_k: int = 3) -> list[str]:
    """–†–µ—Ä–∞–Ω–∫–∏–Ω–≥ —á–∞–Ω–∫–æ–≤ –ø–æ —Å–º—ã—Å–ª—É —Å –ª–æ–≥–∞–º–∏."""
    pairs = [[query, chunk] for chunk in chunks]
    scores = reranker.predict(pairs)

    scored_chunks = list(zip(chunks, scores))
    ranked = sorted(scored_chunks, key=lambda x: x[1], reverse=True)

    print(f"\nüîç RERANK: {query}\n{'='*60}")
    for i, (chunk, score) in enumerate(ranked):
        mark = "‚úÖ" if i < top_k else "  "
        print(f"{mark} [{score:.3f}] {chunk[:100].strip()}...")

    return [chunk for chunk, _ in ranked[:top_k]]