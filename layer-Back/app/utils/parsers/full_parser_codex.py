from bs4 import BeautifulSoup
import json

def parse_upk_articles_precise_tags(html_path: str, output_json: str):
    with open(html_path, "r", encoding="utf-8") as f:
        soup = BeautifulSoup(f, "html.parser")

    articles = []
    current_article = None
    current_section = None
    current_chapter = None

    for tag in soup.find_all(["p", "h3"]):
        text = tag.get_text(strip=True)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞
        if text.startswith("–†–∞–∑–¥–µ–ª "):
            current_section = text

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤—ã
        elif text.startswith("–ì–ª–∞–≤–∞ "):
            current_chapter = text

        # –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
        elif text.startswith("–°—Ç–∞—Ç—å—è") and "." in text:
            if current_article:
                articles.append(current_article)

            try:
                parts = text.replace("–°—Ç–∞—Ç—å—è", "").strip().split(".", maxsplit=1)
                number = parts[0].strip()
                title = parts[1].strip()
                full_tag = f"–°—Ç–∞—Ç—å—è {number}. {title}"
                current_article = {
                    "article": number,
                    "title": title,
                    "text": "",
                    "tags": full_tag,  # ‚Üê —Å—é–¥–∞ –∏–¥—ë—Ç —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏
                    "section": current_section or "",
                    "chapter": current_chapter or ""
                }
            except:
                continue

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫ —Ç–µ–∫—É—â–µ–π —Å—Ç–∞—Ç—å–µ
        elif current_article:
            current_article["text"] += text + "\n"

    if current_article:
        articles.append(current_article)

    with open(output_json, "w", encoding="utf-8") as f:
        json.dump(articles, f, ensure_ascii=False, indent=2)

    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π ‚Üí {output_json}")

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    parse_upk_articles_precise_tags(
        html_path="–£–ü–ö_–†–ö.html",
        output_json="full_codex.json"
    )
