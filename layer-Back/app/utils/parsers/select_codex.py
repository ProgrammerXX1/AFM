from bs4 import BeautifulSoup
import json

def parse_selected_articles(html_path: str, output_json: str, selected_articles: list):
    with open(html_path, "r", encoding="utf-8") as f:
        soup = BeautifulSoup(f, "html.parser")

    articles = []
    current_article = None
    current_number = None

    for tag in soup.find_all(["p", "h3"]):
        text = tag.get_text(strip=True)

        # –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
        if text.startswith("–°—Ç–∞—Ç—å—è") and "." in text:
            if current_article and current_number in selected_articles:
                articles.append(current_article)

            try:
                parts = text.replace("–°—Ç–∞—Ç—å—è", "").strip().split(".", maxsplit=1)
                current_number = parts[0].strip()
                title = parts[1].strip()

                current_article = {
                    "article": current_number,
                    "title": title,
                    "text": "",
                    "tags": []
                }
            except:
                current_article = None
                current_number = None

        elif current_article and current_number in selected_articles:
            current_article["text"] += text + "\n"

    # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç–∞—Ç—å—è
    if current_article and current_number in selected_articles:
        articles.append(current_article)

    with open(output_json, "w", encoding="utf-8") as f:
        json.dump(articles, f, ensure_ascii=False, indent=2)

    print(f"\n‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π ‚Üí {output_json}")


# üîß –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    html_path="–£–ü–ö_–†–ö.html",
    output_json="select_codex.json"

    user_input = input("üîç –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç–∞—Ç–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
    selected = [num.strip() for num in user_input.split(",") if num.strip().isdigit()]

    if not selected:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏.")
    else:
        parse_selected_articles(html_path, output_json, selected)
